version: '3.8'

services:
  backend:
    container_name: backend
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    networks:
      - react-spring
      - spring-mysql
    depends_on:
      - mysql-docker
    environment:
      MYSQL_HOST: localhost
      MYSQL_URL: jdbc:mysql://localhost:6604/test
      MYSQL_USER: root
      MYSQL_PASSWORD: aaAA11!!

  frontend:
    container_name: frontend
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - react-spring
    depends_on:
      - backend
    expose:
      - 6604
      - 3306
      - 33060

  mysql-docker:
    image: mysql:8.4
    container_name: mysql-docker
    environment:
      MYSQL_ROOT_PASSWORD: aaAA11!!
      MYSQL_DATABASE: test
    ports:
      - "6604:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 3s
      retries: 5
      start_period: 30s
      
volumes:
  mysql-data:
networks:
  react-spring: {}
  spring-mysql: {}
